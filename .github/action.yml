name: Upgrade
description: Test PrestaShop upgrade process
runs:
  using: composite
  steps:
    - name: Get base version
      id: get_base_version
      shell: bash
      run: |
        case ${{ matrix.from }} in
          1.6* | 1.7.[1-4]*)
          echo "BASE_VERSION=7.1-apache" >> "$GITHUB_OUTPUT"
          ;;
          1.7.[5-6]*)
          echo "BASE_VERSION=7.2-apache" >> "$GITHUB_OUTPUT"
          ;;
          1.7.7*)
          echo "BASE_VERSION=7.3-apache" >> "$GITHUB_OUTPUT"
          ;;
          1.7.8*)
          echo "BASE_VERSION=7.4-apache" >> "$GITHUB_OUTPUT"
          ;;
          8.0* | 8.1*)
          echo "BASE_VERSION=8.1-apache" >> "$GITHUB_OUTPUT"
          ;;
          *)
          echo "BASE_VERSION=7.1-apache" >> "$GITHUB_OUTPUT"
          ;;
        esac

    - name: Build docker compose stack
      env:
        VERSION: ${{ matrix.from }}
        BASE_VERSION: ${{ steps.get_base_version.outputs.BASE_VERSION }}
        PS_INSTALL_AUTO: 0
      shell: bash
      run: |
        docker compose up -d
        ${{ github.action_path }}check_url.sh http://localhost:8001/index.php 200
        docker compose run -u www-data:www-data --rm reference-release php -d memory_limit=-1 /var/www/html/install-dev/index_cli.php \
          --domain=localhost:8001 --db_server=mysql:3306 --db_name=psreference --db_user=root \
          --db_password=root --prefix=ps_ --firstname="John" --lastname="Doe" \
          --password=prestashop_demo --email=demo@prestashop.com --language=en --country=fr \
          --all_languages=0 --newsletter=0 --send_email=0 --ssl=0

    - name: Upgrade (intermediate)
      env:
        CHANNEL: 'archive'
        ARCHIVE_URL: 'https://github.com/PrestaShop/PrestaShop/releases/download/1.7.7.8/prestashop_1.7.7.8.zip'
        XML_URL: 'https://api.prestashop.com/xml/md5/1.7.7.8.xml'
        VERSION: '1.7.7.8'
        FROM: ${{ matrix.from }}
        SKIP: ${{ matrix.ps-versions.channel != 'archive' || !startsWith(matrix.from, '1.6') || startsWith(matrix.ps-versions.version, '1.7.7') }}
      shell: bash
      run: |
        [[ "$SKIP" == true ]] || ${{ github.action_path }}action_upgrade.sh
        [[ "$SKIP" == true ]] || docker stop prestashop_autoupgrade
        [[ "$SKIP" == true ]] || docker rm prestashop_autoupgrade
        [[ "$SKIP" == true ]] || docker run --name prestashop_autoupgrade -p 8001:80 -v autoupgrade_temp-ps:/var/www/html -v "$(pwd):/var/www/html/modules/autoupgrade" --network autoupgrade_default -d prestashop/base:7.2-apache
        [[ "$SKIP" == true ]] || ${{ github.action_path }}check_url.sh http://localhost:8001/index.php 200

    - name: Upgrade
      env:
        CHANNEL: ${{ matrix.ps-versions.channel }}
        ARCHIVE_URL: ${{ matrix.ps-versions.zip }}
        XML_URL: ${{ matrix.ps-versions.xml }}
        VERSION: ${{ matrix.ps-versions.version }}
        FROM: ${{ matrix.from }}
      shell: bash
      run: ${{ github.action_path }}action_upgrade.sh

    - name: Check endpoints response
      shell: bash
      run: |
        bash -c '[ "$(curl -L -s -o /dev/null -w %{http_code} http://localhost:8001/index.php)" == "200" ]'
        bash -c '[ "$(curl -L -s -o /dev/null -w %{http_code} http://localhost:8001/admin-dev/index.php)" == "200" ]'

    - name: Rollback
      shell: bash
      run: |
        backupName=$(docker exec prestashop_autoupgrade bash -c "ls -td -- /var/www/html/admin-dev/autoupgrade/backup/*/ | head -n 1 | cut -d'/' -f8 | tr -d '\n'")
        docker exec -u www-data prestashop_autoupgrade php modules/autoupgrade/bin/console backup:restore --backup=$backupName admin-dev

    - name: Check endpoints response
      shell: bash
      run: |
        bash -c '[ "$(curl -L -s -o /dev/null -w %{http_code} http://localhost:8001/index.php)" == "200" ]'
        bash -c '[ "$(curl -L -s -o /dev/null -w %{http_code} http://localhost:8001/admin-dev/index.php)" == "200" ]'
