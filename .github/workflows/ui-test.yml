name: UI Tests
on:
  ## Check each PR
  push:
  pull_request:
  ## Manual execution on branch
  workflow_dispatch:
  ## Nightly
  ### Needs secrets
  #### GC_PROJECT_ID
  #### GC_SERVICE_KEY
  #### NIGHTLY_TOKEN
  schedule:
    - cron: '0 0 * * *'
env:
  CAMPAIGN: 'autoupgrade'
jobs:
  ui_test:
    name: UI Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - PS_VERSION_START: 1.7.8.11
            PS_VERSION_END: 8.1.7
            UPGRADE_CHANNEL: major
            PHP_VERSION: 7.4
          - PS_VERSION_START: 8.0.1
            PS_VERSION_END: 8.1.7
            UPGRADE_CHANNEL: minor
            PHP_VERSION: 7.2
          - PS_VERSION_START: 8.0.5
            PS_VERSION_END: 8.1.7
            UPGRADE_CHANNEL: major
            PHP_VERSION: 7.2
          - PS_VERSION_START: 8.1.0
            PS_VERSION_END: 8.1.7
            UPGRADE_CHANNEL: minor
            PHP_VERSION: 7.2
          - PS_VERSION_START: 8.1.0
            PS_VERSION_END: 8.1.7
            UPGRADE_CHANNEL: minor
            PHP_VERSION: 7.3

    env:
      PS_DOCKER: ${{ matrix.PS_VERSION_START }}-${{ matrix.PHP_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Start containers
        working-directory: tests/UI/
        env:
          PS_VERSION: ${{ env.PS_DOCKER }}
        run: |
          docker compose -f "docker-compose.yml" up -d --build
          bash -c 'while [[ "$(curl -L -s -o /dev/null -w %{http_code} http://localhost/en/)" != "200" ]]; do sleep 5; done'

      - name: Composer install
        run: composer install

      - name: Install module autoupgrade
        working-directory: tests/UI/
        run: |
          docker exec -t prestashop php -v bin/console prestashop:module install autoupgrade

      - name: Upgrade
        run: |
         docker exec -t prestashop php modules/autoupgrade/cli-upgrade.php --dir=admin-dev --channel=${{ matrix.UPGRADE_CHANNEL }}
         docker exec -t prestashop chmod 777 -R /var/www/html/var/cache/dev

      - name: Install dependencies
        working-directory: tests/UI/
        run: npm ci

      - name: Install Playwright Browsers
        working-directory: tests/UI/
        run: npx playwright install chromium --with-deps

      - name: Run Sanity tests
        working-directory: tests/UI/
        env:
          PS_VERSION: ${{ matrix.PS_VERSION_END }}
          DB_USER: prestashop
          DB_PASSWD: prestashop
          DB_NAME: prestashop
          DB_PREFIX: ps_
        run: npx playwright test

      - name: Export Docker errors
        working-directory: tests/UI/
        if: always()
        run: docker compose logs --no-color >& docker-compose.log

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.PS_VERSION_START }}-${{ matrix.PS_VERSION_END }}-${{ matrix.PHP_VERSION }}
          path: |
            tests/UI/reports/
            tests/UI/report.json
            tests/UI/docker-compose.log
          retention-days: 30
